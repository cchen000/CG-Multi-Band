# # # # # # # # # # # # # # # # # # # # 
# # # # # # # # # # # # # # # # # # # # 
#
#                   For networks
#
# # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # 

# Basic parameters
network_tag         : EX4 # DT14; DT14TEST%n, %n will be specified by NetworkTESTID;

topologies          : networks\raw\EX4.txt
# Actually, we only use .mat files initlizaed by this file, see <initiliazedNetworkMAT.m>
# Keyword network_tag will be used to refer this network. 
# So, keep network_tag and topologies being coinciding.

wideband_file       : networks\raw\EX4_LCBands.txt # Example4node_LCBand.txt; Example4node_LCBands.txt

number_of_nodes     : 4   # Please check this parameter (number_of_nodes) with the parameter (topolgoies);
number_of_edges     : 7   # Please check this parameter (number_of_edges) with the parameter (topolgoies);

# traffic demand profile
num_commodity     : 3
commodity_src     : [1,   2,  2] 
commodity_dst     : [4,   3,  4]  
commodity_amount  : [0.5,   0.5,  0.5] 

# Advanced setting for making comparison between different random test networks
flag_TESTNET        : 0 # whether activating TEST networks.
NetworkTESTID       : 0


# # # # # # # # # # # # # # # # # # # # 
# # # # # # # # # # # # # # # # # # # # 
#
#                   For Physical Layers
#
#   - fiber
#   - transceiver
#   - transmission mode 
#   
# # # # # # # # # # # # # # # # # # # #
# # # # # # # # # # # # # # # # # # # # 


# ==============================
#           Fiber
# ==============================

frequency_slots     : 50          # Bandwidth of a slot;
number_of_slots     : 8        # 240 FSs for 3000 GHz; 60 FSs for 750GHz; 80 FSs for 1000 GHz;

#'[a-zA-Z]Band$':[spectrum(in GHz), max_transceivers_perband, SNRmargindB, center_frequency(GHz)]
UBand          : [5e3,              100000,             -4.4, -3750] #  
LBand          : [100,              100000,              -2,    0] # 
CBand          : [300,              100000,               0,   3750] #  
LCBand         : [400,              100000,               0,    0] #  
SBand          : [9e3,              100000,               0,    0] #  
EBand          : [14e3,             100000,               0,    0] #  
OBand          : [17e3,             100000,               0,    0] #  

#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!
#widebandset    : LCBand  # ULCBand; UBand, LBand, CBand ; LCBand,
# number_of_bands: 1          
# ABOVE SHOW DEMO FOR A SINGLE BAND IN RWA
# BELOW SHOW DEMO FOR MUL. BANDS IN RWBA (Note: wideband_file)
widebandset    : CBand,LBand  # ULCBand; UBand, LBand, CBand ; LCBand,
number_of_bands: 2              
# NOTE: THIS SHOULD BE CONSISTENT WITH <widebandset>.
#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!

limited_transceivers :   1000e3  # max. avaliable transceivers allowed in a network


# ==============================
#           table of transceiver
# ==============================
#  Format  :
#  Name    :  [Signal bandwidth,  No. FSs,  exampleCapacity,    transceiver noise, baud_rate]
Trans00G   :  [0,                       0,                0,                    0,         0] #
Trans10G   :  [10,                      1,               20,                -2100,        10] #
Trans12d5G : [12.5,                     1,               25,                -2100,      12.5] #
Trans15G   :  [15,                      1,               30,                -2100,        15] #
Trans25G   :  [25,                      1,               50,                -2100,        25] #
Trans32G   :  [32,                      1,               64,                -2100,        32] #
Trans50G   :  [50,                      1,              100,                -2100,        50] #
Trans75G   :  [75,                      1,              150,                -2100,        75] #
Trans100G  : [100,                      1,              200,                -2100,       100] #
Trans150G  : [150,                      1,              300,                -2100,       150] #
Trans200G  : [200,                      1,              400,                -2100,       200] #
Trans500G  : [500,                      1,             1000,                -2100,       500] #
DefaultSpectralEfficiency : 2
# DefaultClientBitRate is initialized assuming a given modulation format with spectral efficiency of 2 bit/s/Hz.


number_of_transponder : 1 # e.g. 1, 2, 3
transponder_set :  Trans50G      # Trans16G, Trans32G, Trans64G
baud_rate_strategy :  big-first  # % small-first, random, big-first


# ==============================
#          table of transmission modes
# ==============================
# Format:
# Name    : [minReqSNRdB, DefaultClientBitRate, transmissionreach]
PM_NULL   : [0               0                  1e4              ] #

PM_BPSK   : [3.7             50                 150              ] # 
PM_QPSK   : [6.7             100                75               ] # 
PM_8QAM   : [10.8            150                29               ] # 
PM_16QAM  : [13.2            200                16               ] # 
PM_32QAM  : [16.2            250                8                ] # 
PM_64QAM  : [19.0            300                4                ] # 
PM_128QAM : [21.8            350                2                ] # 
PM_256QAM : [24.7            400                1                ] # 
PM_512QAM : [27.4            450                0                ] # 

default_baud_rate : 32
# DefaultClientBitRate is implemented using a transceiver as 32 GBaud, thus the spectral efficiency is {50,100,..., 450}/32.
# Expressing spectral efficiency as the division of <Capacity/DefaultBaudRate>
#    would be easier than directly expressing as a fractional value.

# Equaltion for reach by function (not used by this project) : floor(352 / 10^(SNRth/10));  
# See [10.1364/JOCN.460629]
# This project can use this equation : floor(120 / 10^(SNRth/10))

number_of_transmission_modes : 8
transmission_mode_set   : PM_BPSK, PM_QPSK, PM_8QAM, PM_16QAM, PM_32QAM, PM_64QAM, PM_128QAM, PM_256QAM
# transmission_mode_set : PM_NULL
# transmission_mode_set : PM_BPSK, PM_QPSK, PM_8QAM, PM_16QAM, PM_32QAM, PM_64QAM, PM_128QAM, PM_256QAM, PM_512QAM


# # # # # # # # # # # # # # # # # # # # 
# # # # # # # # # # # # # # # # # # # #  
#
#           Algorithm parameters
# 
# -  Simulation Specified Parameters
# -  bchmark_ILP
# -  RMP
# -  Pricing Problem
# -  RMP_INT
# 
# # # # # # # # # # # # # # # # # # # # 
# # # # # # # # # # # # # # # # # # # # 


candidate_routes      : 3      # k, Yen's algorithm by default;
random_seed           : 0
iteration_CG          : 400     # maximum number of iterations for CG.

# ==============================
# bchmark_ILP
# ==============================
ILP_TimeLimit         : 3600 # 1 hour
ILP_mingap            : 1e-2 # 5e-2, 2e-2
ILP_FeasibilityTol    : 1e-6
ILP_OptimalityTol     : 1e-6

# ==============================
# RMP
# ==============================
rmp_TimeLimit          : 10
rmp_mingap             : 1e-2

# ==============================
# Pricing Problem
# ==============================
pricing_optimality_tol : 1e-4 # for priciny by ILP
pricing_mingap         : 5e-2 # for priciny by ILP

# ==============================
# RMP_INT
# ==============================
rmpINT_mingap          : 1e-2
rmpINT_optimality_tol  : 1e-2
rmpINT_TimeLimit       : 10*1+0  # 10 seconds;

capacity_scaling_factor : 1 # to be removed ? (for the acceptable coefficient range within the optimization solver)
